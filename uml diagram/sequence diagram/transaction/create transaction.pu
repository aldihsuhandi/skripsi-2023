@startuml create transaction
'autonumber 1.1.1

actor User as u

' Box "front end"
participant "Cart page" as cart
participant "Transaction pick payment page" as trxpay
participant "Transaction detail page" as trxdetail
' end box

' Box "back end"
participant "TransactionController" as trxc

participant "TransactionCreateProcessor" as trxcreate
participant "TransactionPaymentProcessor" as payproc

participant "Cart" as cm
participant "Transaction" as trxm
participant "TransactionDetail" as trxdm

participant "Item" as im
participant "Activity" as am
' end box

database shumishumi as db

participant Midtrans as mt

u -> cart++ : click pay
cart -> trxc++ : /transaction/create
trxc -> trxcreate++ : process()

trxcreate -> cm++ : querySelected()
cm -> db++ : query()
return result

create trxm
trxcreate -> trxm++ : new()
trxm -> db++ : create()
return result

loop for every selected cart
    create trxdm
    trxcreate -> trxdm++ : new()
    trxdm -> db++ : create()
    return result
    trxdm -> trxm --: composeDetail()
end

deactivate cm

trxm --> trxcreate --: result
return result
return JSON_RESPONSE

'autonumber inc b
cart -> trxpay --++ : redirect to pick payment page
trxpay -> trxc++ : /transaction/payment
trxc -> payproc++ : process()

payproc -> mt++ : createPaymentRequest()
return result

payproc -> trxm++ : changeStatus()
trxm -> db++ : update()
return result
return result

loop for every item in transaction
    payproc -> cm++ : delete()
    cm -> db++ : delete()
    return result
    deactivate cm
    destroy cm

    payproc -> im++ : decreaseQuantity()
    im -> db++ : update()
    return result
    deactivate im

    create am
    payproc -> am++ : new()
    am -> db++ : save()
    return result
    deactivate am
end

return result
return JSON_RESPONSE

trxpay -> trxdetail --++ : redirect to transaction detail


@enduml